#+TITLE: C++2 Week One
#+AUTHOR: Karl Statz

* Welcome
Hello! and welcome back to the exciting world of C++. This is the advanced version of C++ I. If we havent met I am Karl Statz, a 15 year veteran software developer working primarily in distributed systems and Domain Driven Design. Ive taught C++ at Columbia since 2017. [here is my github](https://github.com/kstatz12). Outside of teaching and working, i contribute to open source projects and sit at home with my dogs.
* Class Structure
This class is much more project based than c++ 1 was. I work under the assumption that you are comfortable in the language and can mostly work independently, the lecture will be shorter and more targeted and the projects more complicated
* C++ Review



Common Namespaces
#+BEGIN_SRC cpp
#include<iostream>
#include<vector>
#include<string>
#include<algorithm>
#+END_SRC

Defining a program
#+BEGIN_SRC cpp
int main()
{
    //do the things
}
#+END_SRC

#+BEGIN_SRC cpp
struct A {
  int x;
};

//Pass by value
void foo(A a) { a.x = 10; }

//Pass by pointer
void bar(A *a) { a->x = 10; }

//Pass by reference
void baz(A &a) { a.x = 10; }

//Pass by rvalue reference
void baz2(A &&a) { a.x = 10; }

#+END_SRC

[GCC Manual](https://www.man7.org/linux/man-pages/man1/gcc.1.html)
#BEGIN_SRC shell
-fsanitize=address //use after free detection
-Wall //warnings all
-Wextra //warnings extra
-Werror //treat warnings as errors
-O2 //compile with optimization level 2 (preferred)
-pedantic //compile without compiler specific enhancements
#END_SRC


* Common tools

** Supported Compilers
- MSVC (Microsoft)
- GCC (GNU Compiler Collection)
- Clang\LLVM
** Supported Build Tools
- CMake
- make
- Shell Scripts
** Supported Language versions
- C++ 11 or later
