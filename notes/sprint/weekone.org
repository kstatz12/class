#+title: F# Week One
#+author: Karl Statz
#+email: kstatz@colum.edu
* Hello!

Hello and welcome to Code Sprint: F# Edition. My name is Karl Statz. I normally teach C++ I and II but they have let me out of the dungeon to teach functional goodness on top of the .NET Framework. I have been a professional programmer for 15 years in a career spanning logistics, financial and construction software along with a tonn of websites no one ever visited and apps no one downloaded.

In this course i will be posting weekly 1 hour videos/articles or documents. Along with in class work like logic problems etc we will have one over-arching project that we create which will be a RESTful Web API for talking to the internet movie database.
* Setup
I assume most/all of you have visual studio of some kind or another installed. We will be using the Dotnet Core/5.0 sdk (whichever you prefer they are functionally identical for this course) and I will be demonstrating how to manage .NET projects from the command line. I recommend this route because it forces you to learn the project structure a bit better and I find it more ergonomic. As far as editors you can use Visual Studio, Visual Studio Code, Jetbrain's Rider or any text editor you want. I will, of course, be using trust old emacs for my demos. Part of this class is learning how to set up a development environment but feel free to ask me questions.
* F# basics
One of the best parts about learning f# is it comes packaged with a REPL (Read Eval Print Loop) that allows us to try the language out in an adhoc manner. in the terminal/command line of your choice (on macos/linux any ol terminal emulator will do but i recommend Alacritty and on windows make sure to install the Windows Terminal from the app store for the best experience and I personally use powershell) enter `dotnet fsi` and you should see the following

#+BEGIN_SRC fsharp
Microsoft (R) F# Interactive version 11.4.2.0 for F# 5.0
Copyright (c) Microsoft Corporation. All Rights Reserved.
#+END_SRC

Once in this shell you can start by entering F# Expressions.

#+BEGIN_SRC fsharp
//variable assignment
> let a = 10;; //all expressions in the shell end with ;;
//types are automatically deduced
// lists are in [] brackets and seperated by ;
> let l = [1; 2; 3];;

//functions
> let sum x y = x + y;;
val sum : x:int -> y:int -> int

> sum 10 10;;
val it : int = 20

#+END_SRC
* Links/Misc

[[https://docs.microsoft.com/en-us/dotnet/fsharp/tools/fsharp-interactive/][fsi]]

[[https://dotnet.microsoft.com/download/dotnet/5.0][dotnet sdk]]

[[https://code.visualstudio.com/][visual studio code]]

[[https://www.jetbrains.com/rider/][jetbrains rider]]
